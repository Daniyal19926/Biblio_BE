// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Borrower {
  id         String      @id @default(cuid())
  name       String
  borrowDate DateTime
  book       Book[]
  dvd        Dvd[]
  audioBook  AudioBook[]
}

model Category {
  id            String          @id @default(cuid())
  name          String          @unique
  book          Book[]
  dvd           Dvd[]
  audiobook     AudioBook[]
  referenceBook ReferenceBook[]
}

model Book {
  id           String    @id @default(cuid())
  title        String
  author       String
  nbrPages     Int
  type         String    @default("book")
  category     Category  @relation(fields: [categoryId], references: [id])
  categoryId   String
  isBorrowable Boolean   @default(true)
  borrower     Borrower? @relation(fields: [borrowerId], references: [id])

  borrowerId String?
}

model Dvd {
  id             String @id @default(cuid())
  title          String
  runTimeMinutes Int

  type         String   @default("dvd")
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   String
  isBorrowable Boolean  @default(true)

  borrower Borrower? @relation(fields: [borrowerId], references: [id])

  borrowerId String?
}

model AudioBook {
  id             String @id @default(cuid())
  title          String
  runTimeMinutes Int
  type           String @default("audioBook")

  category Category @relation(fields: [categoryId], references: [id])

  categoryId String

  isBorrowable Boolean   @default(true)
  borrower     Borrower? @relation(fields: [borrowerId], references: [id])
  borrowerId   String?
}

model ReferenceBook {
  id           String   @id @default(cuid())
  title        String
  author       String
  nbrPages     Int
  type         String   @default("referenceBook")
  category     Category @relation(fields: [categoryId], references: [id])
  categoryId   String
  isBorrowable Boolean  @default(false)
}

model User {
  id       String @id @default(cuid())
  name     String
  password String
}
